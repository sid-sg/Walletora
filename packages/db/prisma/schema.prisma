generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email  String @unique
  name String
  hashedPassword String
  balance Balance[]
  onRampTransaction OnRampTransaction[]
  sentTransfers P2PTransaction[]  @relation(name: "FromUserRelation")
  receivedTransfers P2PTransaction[] @relation(name: "ToUserRelation")
}

model Balance {
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int @default(0)
  locked Int 
  user User @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id Int @id @default(autoincrement())
  status onRampStatus
  token String @unique
  provider String
  amount Int 
  startTime DateTime
  userId Int
  user User @relation(fields: [userId], references: [id]) 
}

enum onRampStatus {
  Success
  Failure
  Processing
}

model P2PTransaction {
  id Int @id @unique @default(autoincrement())
  status P2PStatus
  amount Int
  startTime DateTime
  fromUserId Int
  toUserId Int
  fromUser User @relation(fields: [fromUserId], name: "FromUserRelation", references: [id]) 
  toUser User @relation(fields: [toUserId], name: "ToUserRelation", references: [id]) 
}


enum P2PStatus {
  Sent
  Failure
  Processing
}